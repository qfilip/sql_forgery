dbSet.EntityType
    .GetDeclaredForeignKeys()
    .Select(x => x.DeclaringEntityType.ClrType)
    .ToArray();


private static DbSet<object> GetDbSetForClrType(DbContext ctx, Type clrType)
    {
        Type DbSetType = typeof(DbSet<>);

        var property = ctx.GetType()
                .GetProperties(BindingFlags.Public | BindingFlags.Instance)
                .Select(p => new { PropertyInfo = p, PropertyType = p.PropertyType })
                .FirstOrDefault(t =>
                    t.PropertyType.IsGenericType &&
                    t.PropertyType.GetGenericTypeDefinition() == DbSetType &&
                    t.PropertyType.GetGenericArguments()[0] == clrType);

        if(property == null)
        {
            throw new InvalidOperationException($"DbSet for type: {clrType} not found");
        }

        return (property.PropertyInfo.GetValue(ctx) as DbSet<object>)!;
    }